Kitsunet:
  ImageManipulation:
    ImageBlob:
      # Maps classnames of \Kitsunet\ImageManipulation\ImageBlob\Manipulation\Description\ManipulationDescriptionInterface implementations
      # to classnames of \Kitsunet\ImageManipulation\ImageBlob\Manipulation\ImageManipulationInterface implementations
      #
      typeBasedManipulationMapping:
        __fallback: '\Kitsunet\ImageManipulation\ImageBlob\Manipulation\PassthroughImageManipulation'
        crop: '\Kitsunet\ImageManipulation\Imagine\CropManipulation'
        resize: '\Kitsunet\ImageManipulation\Imagine\ResizeManipulation'
        grayscale: '\Kitsunet\ImageManipulation\Imagine\GrayscaleManipulation'
        passthrough: '\Kitsunet\ImageManipulation\ImageBlob\Manipulation\PassthroughImageManipulation'
        rotate: '\Kitsunet\ImageManipulation\Imagine\RotateManipulation'
      preDescriptions: []
      postDescriptions: []

      metadata:
        defaultOptions:
          imagine:
            # 0-100 higher is better quality but bigger filesize
            jpeg_quality: 90
            # 0-9 lower is better quality but bigger filesize
            png_compression_level: 0
            convertCMYKToRGB: true
            resizeFilter: '%\Imagine\Image\ImageInterface::FILTER_UNDEFINED%'

Neos:
  Media:
    imageBlob:
      adjustmentMapping:
        'Neos\Media\Domain\Model\Adjustment\CropImageAdjustment':
          class: 'Kitsunet\ImageManipulation\Imagine\CropManipulation'
        'Neos\Media\Domain\Model\Adjustment\ResizeImageAdjustment':
          class: 'Kitsunet\ImageManipulation\Imagine\ResizeCropManipulation'
